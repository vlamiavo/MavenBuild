# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven - vlamiavo 

on:
  push:
    branches: [ "master"]
    paths:
     - 'src/**'
     - '.github/workflows/maven.yaml'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: "mvn -B ${{ secrets.mavenGoal }} --file ${{ vars.buildScript }}"

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    - name: ssh scp ssh pipelines
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      with:
       host: 54.224.208.16
       user: ubuntu
       key: ${{ secrets.DC_PASS }}
       port: 22
       connect_timeout: 10s
       first_ssh: |
        ls -alrt /var/lib/tomcat9/webapps
       scp: |
        './target/*.war' => /tmp/
       last_ssh: |
         sudo cp /tmp/*.war /var/lib/tomcat9/webapps
         ls -alrt /var/lib/tomcat9/webapps
